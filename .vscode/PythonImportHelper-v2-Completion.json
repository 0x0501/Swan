[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "pathlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pathlib",
        "description": "pathlib",
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "toml",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "toml",
        "description": "toml",
        "detail": "toml",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Recorder",
        "importPath": "DataRecorder",
        "description": "DataRecorder",
        "isExtraImport": true,
        "detail": "DataRecorder",
        "documentation": {}
    },
    {
        "label": "Chromium",
        "importPath": "DrissionPage",
        "description": "DrissionPage",
        "isExtraImport": true,
        "detail": "DrissionPage",
        "documentation": {}
    },
    {
        "label": "ChromiumOptions",
        "importPath": "DrissionPage",
        "description": "DrissionPage",
        "isExtraImport": true,
        "detail": "DrissionPage",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "DrissionPage.errors",
        "description": "DrissionPage.errors",
        "isExtraImport": true,
        "detail": "DrissionPage.errors",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "unique",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Config",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "Config",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "tkinter",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tkinter",
        "description": "tkinter",
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "tkinter.messagebox",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tkinter.messagebox",
        "description": "tkinter.messagebox",
        "detail": "tkinter.messagebox",
        "documentation": {}
    },
    {
        "label": "platform",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "platform",
        "description": "platform",
        "detail": "platform",
        "documentation": {}
    },
    {
        "label": "Config",
        "kind": 6,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "class Config:\n    __config_obj = None\n    __config_file_path = ''\n    def __init__(self, config_file_path) -> None:\n        if not os.path.exists(config_file_path):\n            raise FileNotFoundError('Cannot find the config file at %s' %\n                                    config_file_path)\n        config = toml.load(config_file_path)\n        self.__config_file_path = config_file_path\n        self.__config_obj = config",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "Location",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class Location(Enum):\n    SHUHE_TOWN = 'https://www.dianping.com/shop/iDYbcrjcbQJyvJyu/review_all',\n    BAISHA_TOWN = 'https://www.dianping.com/shop/k6ttY31GVwu40nbW/review_all'\n# remove the trailing whitespace\ndef sanitize_text(text: str) -> str:\n    return re.sub(r'\\s+', '', text.strip())\nclass Swan():\n    config_file_path = ''\n    data_directory = ''\n    __config: Config = None",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "Swan",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class Swan():\n    config_file_path = ''\n    data_directory = ''\n    __config: Config = None\n    config = None\n    location: Location = None\n    chromium_tabs: list = []\n    chromium_options = ChromiumOptions\n    def __init__(self, config_file_path: str) -> None:\n        self.config_file_path = config_file_path",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "sanitize_text",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def sanitize_text(text: str) -> str:\n    return re.sub(r'\\s+', '', text.strip())\nclass Swan():\n    config_file_path = ''\n    data_directory = ''\n    __config: Config = None\n    config = None\n    location: Location = None\n    chromium_tabs: list = []\n    chromium_options = ChromiumOptions",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "comment_swan_main",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def comment_swan_main():\n    swan = Swan('./swan.config.toml').launch()\n    try:\n        swan.task_dzdp()\n    except KeyboardInterrupt:\n        swan.grace_shutdown()\n        sys.exit(0)\nif __name__ == '__main__':\n    comment_swan_main()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "config",
        "kind": 5,
        "importPath": "test",
        "description": "test",
        "peekOfCode": "config = Config('./swan.config.toml')\nc = config.load()\n# print(c['account']['test']['username'])\n# c['account']['test']['username'] = 'jjj'\n# print(c['account']['test']['username'])\n# config.save()\nprint(c['account']['dzdp']['page_maximum'])\n# chrome_executable_path = Path(config['application']['chrome_executable_path'])\n# print(os.path.exists(chrome_executable_path))",
        "detail": "test",
        "documentation": {}
    },
    {
        "label": "c",
        "kind": 5,
        "importPath": "test",
        "description": "test",
        "peekOfCode": "c = config.load()\n# print(c['account']['test']['username'])\n# c['account']['test']['username'] = 'jjj'\n# print(c['account']['test']['username'])\n# config.save()\nprint(c['account']['dzdp']['page_maximum'])\n# chrome_executable_path = Path(config['application']['chrome_executable_path'])\n# print(os.path.exists(chrome_executable_path))",
        "detail": "test",
        "documentation": {}
    },
    {
        "label": "show_about",
        "kind": 2,
        "importPath": "test_gui",
        "description": "test_gui",
        "peekOfCode": "def show_about():\n    message = f\"\"\"\n    Swan (天鹅)\n    为了完成这该死的论文开发的程序，能够方便的爬取网络文本。\n    作者: Elias\n    版本号: 1.0.0\n    操作系统: %s\n    Python版本: %s (%s)\n    编译日期: 2024.11.16\n    \"\"\" % (platform.platform(), platform.python_version(), platform.python_compiler())",
        "detail": "test_gui",
        "documentation": {}
    },
    {
        "label": "window",
        "kind": 5,
        "importPath": "test_gui",
        "description": "test_gui",
        "peekOfCode": "window = tk.Tk()\nwindow.title('Swan - Default Mode')\nwindow.geometry('800x500')\nmenu_bar = tk.Menu(window)\nwindow.config(menu=menu_bar)\n# file menu\n# file_menu = tk.Menu(menu_bar, tearoff=0)\n# menu_bar.add_cascade(label='文件', menu=file_menu)\n# file_menu.add_command(label='打开 (Open)')\n# file_menu.add_separator()",
        "detail": "test_gui",
        "documentation": {}
    },
    {
        "label": "menu_bar",
        "kind": 5,
        "importPath": "test_gui",
        "description": "test_gui",
        "peekOfCode": "menu_bar = tk.Menu(window)\nwindow.config(menu=menu_bar)\n# file menu\n# file_menu = tk.Menu(menu_bar, tearoff=0)\n# menu_bar.add_cascade(label='文件', menu=file_menu)\n# file_menu.add_command(label='打开 (Open)')\n# file_menu.add_separator()\n# file_menu.add_command(label='关闭 (Close)')\n# setting menu\nsetting_menu = tk.Menu(menu_bar, tearoff=0)",
        "detail": "test_gui",
        "documentation": {}
    },
    {
        "label": "setting_menu",
        "kind": 5,
        "importPath": "test_gui",
        "description": "test_gui",
        "peekOfCode": "setting_menu = tk.Menu(menu_bar, tearoff=0)\nmenu_bar.add_cascade(label='设置', menu=setting_menu)\nsetting_menu.add_command(label='程序设置 (Ctrl + E)')\nsetting_menu.add_command(label='账号设置 (Ctrl + R)')\ndef show_about():\n    message = f\"\"\"\n    Swan (天鹅)\n    为了完成这该死的论文开发的程序，能够方便的爬取网络文本。\n    作者: Elias\n    版本号: 1.0.0",
        "detail": "test_gui",
        "documentation": {}
    }
]