[
    {
        "label": "runpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "runpy",
        "description": "runpy",
        "detail": "runpy",
        "documentation": {}
    },
    {
        "label": "annotations",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "getenv",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "QSettings",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QSettings",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QSettings",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QFileSystemWatcher",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QTimer",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QAbstractTableModel",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QTimer",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "Signal",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QThread",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QTimer",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QSettings",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QSettings",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QObject",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "Signal",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QThread",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "Signal",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QSettings",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QTimer",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QSize",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QFile",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QFile",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QTextStream",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QSettings",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QSettings",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "base64",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "base64",
        "description": "base64",
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "Fernet",
        "importPath": "cryptography.fernet",
        "description": "cryptography.fernet",
        "isExtraImport": true,
        "detail": "cryptography.fernet",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "pathlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pathlib",
        "description": "pathlib",
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Set",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "traceback",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "traceback",
        "description": "traceback",
        "detail": "traceback",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QDialog",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QDialog",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QDialog",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLineEdit",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFormLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMainWindow",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QTableView",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFileDialog",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QStatusBar",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHeaderView",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QDialog",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QTextEdit",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMainWindow",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QDialog",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QProgressBar",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QDialog",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QTextEdit",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSpacerItem",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSizePolicy",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QDialog",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLineEdit",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFormLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QComboBox",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QCheckBox",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMainWindow",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMenu",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSystemTrayIcon",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QStyle",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QStatusBar",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QListView",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QDialog",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QProgressBar",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QComboBox",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "ErrorDialog",
        "importPath": "src.gui.dialogs.error_dialog",
        "description": "src.gui.dialogs.error_dialog",
        "isExtraImport": true,
        "detail": "src.gui.dialogs.error_dialog",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "unique",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "unique",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "Recorder",
        "importPath": "DataRecorder",
        "description": "DataRecorder",
        "isExtraImport": true,
        "detail": "DataRecorder",
        "documentation": {}
    },
    {
        "label": "Recorder",
        "importPath": "DataRecorder",
        "description": "DataRecorder",
        "isExtraImport": true,
        "detail": "DataRecorder",
        "documentation": {}
    },
    {
        "label": "Recorder",
        "importPath": "DataRecorder",
        "description": "DataRecorder",
        "isExtraImport": true,
        "detail": "DataRecorder",
        "documentation": {}
    },
    {
        "label": "Recorder",
        "importPath": "DataRecorder",
        "description": "DataRecorder",
        "isExtraImport": true,
        "detail": "DataRecorder",
        "documentation": {}
    },
    {
        "label": "Recorder",
        "importPath": "DataRecorder",
        "description": "DataRecorder",
        "isExtraImport": true,
        "detail": "DataRecorder",
        "documentation": {}
    },
    {
        "label": "Chromium",
        "importPath": "DrissionPage",
        "description": "DrissionPage",
        "isExtraImport": true,
        "detail": "DrissionPage",
        "documentation": {}
    },
    {
        "label": "ChromiumOptions",
        "importPath": "DrissionPage",
        "description": "DrissionPage",
        "isExtraImport": true,
        "detail": "DrissionPage",
        "documentation": {}
    },
    {
        "label": "Chromium",
        "importPath": "DrissionPage",
        "description": "DrissionPage",
        "isExtraImport": true,
        "detail": "DrissionPage",
        "documentation": {}
    },
    {
        "label": "Chromium",
        "importPath": "DrissionPage",
        "description": "DrissionPage",
        "isExtraImport": true,
        "detail": "DrissionPage",
        "documentation": {}
    },
    {
        "label": "ChromiumOptions",
        "importPath": "DrissionPage",
        "description": "DrissionPage",
        "isExtraImport": true,
        "detail": "DrissionPage",
        "documentation": {}
    },
    {
        "label": "Chromium",
        "importPath": "DrissionPage",
        "description": "DrissionPage",
        "isExtraImport": true,
        "detail": "DrissionPage",
        "documentation": {}
    },
    {
        "label": "ChromiumOptions",
        "importPath": "DrissionPage",
        "description": "DrissionPage",
        "isExtraImport": true,
        "detail": "DrissionPage",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "DrissionPage.errors",
        "description": "DrissionPage.errors",
        "isExtraImport": true,
        "detail": "DrissionPage.errors",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "DrissionPage.errors",
        "description": "DrissionPage.errors",
        "isExtraImport": true,
        "detail": "DrissionPage.errors",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "DrissionPage.errors",
        "description": "DrissionPage.errors",
        "isExtraImport": true,
        "detail": "DrissionPage.errors",
        "documentation": {}
    },
    {
        "label": "Location",
        "importPath": "src.core.location",
        "description": "src.core.location",
        "isExtraImport": true,
        "detail": "src.core.location",
        "documentation": {}
    },
    {
        "label": "Location",
        "importPath": "src.core.location",
        "description": "src.core.location",
        "isExtraImport": true,
        "detail": "src.core.location",
        "documentation": {}
    },
    {
        "label": "Location",
        "importPath": "src.core.location",
        "description": "src.core.location",
        "isExtraImport": true,
        "detail": "src.core.location",
        "documentation": {}
    },
    {
        "label": "concatenate_with_conditions",
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "isExtraImport": true,
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "extract_and_convert_score",
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "isExtraImport": true,
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "extract_update_date",
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "isExtraImport": true,
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "sanitize_text",
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "isExtraImport": true,
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "star_string_to_int",
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "isExtraImport": true,
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "load_json",
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "isExtraImport": true,
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "sanitize_text",
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "isExtraImport": true,
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "sanitize_text",
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "isExtraImport": true,
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "sanitize_text_for_red",
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "isExtraImport": true,
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "TaskProgressTracker",
        "importPath": "src.gui.event.task_progress_tracker",
        "description": "src.gui.event.task_progress_tracker",
        "isExtraImport": true,
        "detail": "src.gui.event.task_progress_tracker",
        "documentation": {}
    },
    {
        "label": "TaskProgressTracker",
        "importPath": "src.gui.event.task_progress_tracker",
        "description": "src.gui.event.task_progress_tracker",
        "isExtraImport": true,
        "detail": "src.gui.event.task_progress_tracker",
        "documentation": {}
    },
    {
        "label": "Encryption",
        "importPath": "src.core.encryption",
        "description": "src.core.encryption",
        "isExtraImport": true,
        "detail": "src.core.encryption",
        "documentation": {}
    },
    {
        "label": "Encryption",
        "importPath": "src.core.encryption",
        "description": "src.core.encryption",
        "isExtraImport": true,
        "detail": "src.core.encryption",
        "documentation": {}
    },
    {
        "label": "Encryption",
        "importPath": "src.core.encryption",
        "description": "src.core.encryption",
        "isExtraImport": true,
        "detail": "src.core.encryption",
        "documentation": {}
    },
    {
        "label": "Encryption",
        "importPath": "src.core.encryption",
        "description": "src.core.encryption",
        "isExtraImport": true,
        "detail": "src.core.encryption",
        "documentation": {}
    },
    {
        "label": "LocationMapping",
        "importPath": "src.core.location_mapping",
        "description": "src.core.location_mapping",
        "isExtraImport": true,
        "detail": "src.core.location_mapping",
        "documentation": {}
    },
    {
        "label": "Platform",
        "importPath": "src.core.swan_platform",
        "description": "src.core.swan_platform",
        "isExtraImport": true,
        "detail": "src.core.swan_platform",
        "documentation": {}
    },
    {
        "label": "Platform",
        "importPath": "src.core.swan_platform",
        "description": "src.core.swan_platform",
        "isExtraImport": true,
        "detail": "src.core.swan_platform",
        "documentation": {}
    },
    {
        "label": "Platform",
        "importPath": "src.core.swan_platform",
        "description": "src.core.swan_platform",
        "isExtraImport": true,
        "detail": "src.core.swan_platform",
        "documentation": {}
    },
    {
        "label": "platform",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "platform",
        "description": "platform",
        "detail": "platform",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QFont",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QAction",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QKeySequence",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QTextCursor",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QIntValidator",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QIcon",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QCursor",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QAction",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QKeySequence",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QIcon",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "QIcon",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "Swan",
        "importPath": "src.core.swan",
        "description": "src.core.swan",
        "isExtraImport": true,
        "detail": "src.core.swan",
        "documentation": {}
    },
    {
        "label": "Swan",
        "importPath": "src.core.swan",
        "description": "src.core.swan",
        "isExtraImport": true,
        "detail": "src.core.swan",
        "documentation": {}
    },
    {
        "label": "Swan",
        "importPath": "src.core.swan",
        "description": "src.core.swan",
        "isExtraImport": true,
        "detail": "src.core.swan",
        "documentation": {}
    },
    {
        "label": "comment_swan_main",
        "importPath": "src.core.swan",
        "description": "src.core.swan",
        "isExtraImport": true,
        "detail": "src.core.swan",
        "documentation": {}
    },
    {
        "label": "Swan",
        "importPath": "src.core.swan",
        "description": "src.core.swan",
        "isExtraImport": true,
        "detail": "src.core.swan",
        "documentation": {}
    },
    {
        "label": "sys,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys.",
        "description": "sys.",
        "detail": "sys.",
        "documentation": {}
    },
    {
        "label": "subprocess",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "subprocess",
        "description": "subprocess",
        "detail": "subprocess",
        "documentation": {}
    },
    {
        "label": "Toast",
        "importPath": "pyqttoast",
        "description": "pyqttoast",
        "isExtraImport": true,
        "detail": "pyqttoast",
        "documentation": {}
    },
    {
        "label": "ToastPreset",
        "importPath": "pyqttoast",
        "description": "pyqttoast",
        "isExtraImport": true,
        "detail": "pyqttoast",
        "documentation": {}
    },
    {
        "label": "Toast",
        "importPath": "pyqttoast",
        "description": "pyqttoast",
        "isExtraImport": true,
        "detail": "pyqttoast",
        "documentation": {}
    },
    {
        "label": "ToastPreset",
        "importPath": "pyqttoast",
        "description": "pyqttoast",
        "isExtraImport": true,
        "detail": "pyqttoast",
        "documentation": {}
    },
    {
        "label": "Toast",
        "importPath": "pyqttoast",
        "description": "pyqttoast",
        "isExtraImport": true,
        "detail": "pyqttoast",
        "documentation": {}
    },
    {
        "label": "ToastPreset",
        "importPath": "pyqttoast",
        "description": "pyqttoast",
        "isExtraImport": true,
        "detail": "pyqttoast",
        "documentation": {}
    },
    {
        "label": "ToastPosition",
        "importPath": "pyqttoast",
        "description": "pyqttoast",
        "isExtraImport": true,
        "detail": "pyqttoast",
        "documentation": {}
    },
    {
        "label": "IconLoader",
        "importPath": "src.utils.icon_loader",
        "description": "src.utils.icon_loader",
        "isExtraImport": true,
        "detail": "src.utils.icon_loader",
        "documentation": {}
    },
    {
        "label": "IconLoader",
        "importPath": "src.utils.icon_loader",
        "description": "src.utils.icon_loader",
        "isExtraImport": true,
        "detail": "src.utils.icon_loader",
        "documentation": {}
    },
    {
        "label": "IconLoader",
        "importPath": "src.utils.icon_loader",
        "description": "src.utils.icon_loader",
        "isExtraImport": true,
        "detail": "src.utils.icon_loader",
        "documentation": {}
    },
    {
        "label": "IconLoader",
        "importPath": "src.utils.icon_loader",
        "description": "src.utils.icon_loader",
        "isExtraImport": true,
        "detail": "src.utils.icon_loader",
        "documentation": {}
    },
    {
        "label": "IconLoader",
        "importPath": "src.utils.icon_loader",
        "description": "src.utils.icon_loader",
        "isExtraImport": true,
        "detail": "src.utils.icon_loader",
        "documentation": {}
    },
    {
        "label": "StyleSheetManager",
        "importPath": "src.utils.stylesheet_manager",
        "description": "src.utils.stylesheet_manager",
        "isExtraImport": true,
        "detail": "src.utils.stylesheet_manager",
        "documentation": {}
    },
    {
        "label": "StyleSheetManager",
        "importPath": "src.utils.stylesheet_manager",
        "description": "src.utils.stylesheet_manager",
        "isExtraImport": true,
        "detail": "src.utils.stylesheet_manager",
        "documentation": {}
    },
    {
        "label": "StyleSheetManager",
        "importPath": "src.utils.stylesheet_manager",
        "description": "src.utils.stylesheet_manager",
        "isExtraImport": true,
        "detail": "src.utils.stylesheet_manager",
        "documentation": {}
    },
    {
        "label": "StyleSheetManager",
        "importPath": "src.utils.stylesheet_manager",
        "description": "src.utils.stylesheet_manager",
        "isExtraImport": true,
        "detail": "src.utils.stylesheet_manager",
        "documentation": {}
    },
    {
        "label": "TaskWorker",
        "importPath": "src.gui.event.task_worker",
        "description": "src.gui.event.task_worker",
        "isExtraImport": true,
        "detail": "src.gui.event.task_worker",
        "documentation": {}
    },
    {
        "label": "TaskWorker",
        "importPath": "src.gui.event.task_worker",
        "description": "src.gui.event.task_worker",
        "isExtraImport": true,
        "detail": "src.gui.event.task_worker",
        "documentation": {}
    },
    {
        "label": "EventEmitter",
        "importPath": "src.gui.event.event_emitter",
        "description": "src.gui.event.event_emitter",
        "isExtraImport": true,
        "detail": "src.gui.event.event_emitter",
        "documentation": {}
    },
    {
        "label": "EventEmitter",
        "importPath": "src.gui.event.event_emitter",
        "description": "src.gui.event.event_emitter",
        "isExtraImport": true,
        "detail": "src.gui.event.event_emitter",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PySide6",
        "description": "PySide6",
        "isExtraImport": true,
        "detail": "PySide6",
        "documentation": {}
    },
    {
        "label": "AboutDialog",
        "importPath": "src.gui.dialogs.about_dialog",
        "description": "src.gui.dialogs.about_dialog",
        "isExtraImport": true,
        "detail": "src.gui.dialogs.about_dialog",
        "documentation": {}
    },
    {
        "label": "CSVViewer",
        "importPath": "src.gui.dialogs.csv_table_viewer",
        "description": "src.gui.dialogs.csv_table_viewer",
        "isExtraImport": true,
        "detail": "src.gui.dialogs.csv_table_viewer",
        "documentation": {}
    },
    {
        "label": "ProgramSettingsDialog",
        "importPath": "src.gui.dialogs.program_settings_dialog",
        "description": "src.gui.dialogs.program_settings_dialog",
        "isExtraImport": true,
        "detail": "src.gui.dialogs.program_settings_dialog",
        "documentation": {}
    },
    {
        "label": "AccountSettingsDialog",
        "importPath": "src.gui.dialogs.account_settings_dialog",
        "description": "src.gui.dialogs.account_settings_dialog",
        "isExtraImport": true,
        "detail": "src.gui.dialogs.account_settings_dialog",
        "documentation": {}
    },
    {
        "label": "LogViewerDialog",
        "importPath": "src.gui.dialogs.log_viewer_dialog",
        "description": "src.gui.dialogs.log_viewer_dialog",
        "isExtraImport": true,
        "detail": "src.gui.dialogs.log_viewer_dialog",
        "documentation": {}
    },
    {
        "label": "RandomUniqueSelector",
        "importPath": "src.utils.random_selector",
        "description": "src.utils.random_selector",
        "isExtraImport": true,
        "detail": "src.utils.random_selector",
        "documentation": {}
    },
    {
        "label": "StarterButton",
        "importPath": "src.gui.widgets.starter_button",
        "description": "src.gui.widgets.starter_button",
        "isExtraImport": true,
        "detail": "src.gui.widgets.starter_button",
        "documentation": {}
    },
    {
        "label": "AccountCheckDialog",
        "importPath": "src.gui.dialogs.account_check_dialog",
        "description": "src.gui.dialogs.account_check_dialog",
        "isExtraImport": true,
        "detail": "src.gui.dialogs.account_check_dialog",
        "documentation": {}
    },
    {
        "label": "ExitDialog",
        "importPath": "src.gui.dialogs.exit_dialog",
        "description": "src.gui.dialogs.exit_dialog",
        "isExtraImport": true,
        "detail": "src.gui.dialogs.exit_dialog",
        "documentation": {}
    },
    {
        "label": "toml",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "toml",
        "description": "toml",
        "detail": "toml",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "Config",
        "importPath": "src.utils.config",
        "description": "src.utils.config",
        "isExtraImport": true,
        "detail": "src.utils.config",
        "documentation": {}
    },
    {
        "label": "tkinter",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tkinter",
        "description": "tkinter",
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "tkinter.messagebox",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tkinter.messagebox",
        "description": "tkinter.messagebox",
        "detail": "tkinter.messagebox",
        "documentation": {}
    },
    {
        "label": "pkg_resources",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pkg_resources",
        "description": "pkg_resources",
        "detail": "pkg_resources",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "GlobalErrorHandler",
        "importPath": "src.core.global_error_handler",
        "description": "src.core.global_error_handler",
        "isExtraImport": true,
        "detail": "src.core.global_error_handler",
        "documentation": {}
    },
    {
        "label": "MainWindow",
        "importPath": "src.gui.main_window",
        "description": "src.gui.main_window",
        "isExtraImport": true,
        "detail": "src.gui.main_window",
        "documentation": {}
    },
    {
        "label": "tqdm",
        "importPath": "tqdm",
        "description": "tqdm",
        "isExtraImport": true,
        "detail": "tqdm",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": ".venv.Scripts.activate_this",
        "description": ".venv.Scripts.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"comment\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))",
        "detail": ".venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": ".venv.Scripts.activate_this",
        "description": ".venv.Scripts.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"comment\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path)",
        "detail": ".venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": ".venv.Scripts.activate_this",
        "description": ".venv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"comment\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix",
        "detail": ".venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": ".venv.Scripts.activate_this",
        "description": ".venv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"comment\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV_PROMPT\"]",
        "kind": 5,
        "importPath": ".venv.Scripts.activate_this",
        "description": ".venv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV_PROMPT\"] = \"comment\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": ".venv.Scripts.activate_this",
        "description": ".venv.Scripts.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"..\\\\Lib\\\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": ".venv.Scripts.activate_this",
        "description": ".venv.Scripts.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": ".venv.Scripts.activate_this",
        "description": ".venv.Scripts.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": ".venv.Scripts.activate_this",
        "description": ".venv.Scripts.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": ".venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "Encryption",
        "kind": 6,
        "importPath": "src.core.encryption",
        "description": "src.core.encryption",
        "peekOfCode": "class Encryption:\n    def __init__(self, key_file_dir_path: str, settings: QSettings,\n                 encrypted_keys: Optional[Set[str]]) -> None:\n        self.key_file = Path.joinpath(\n            Path(key_file_dir_path), 'SWAN_MEGA_KEY.bin')\n        logger.debug('key_file_dir_path: %s' % key_file_dir_path)\n        logger.debug('Encryption Key path: %s' % self.key_file)\n        self._ensure_encryption_key()\n        self.settings = settings\n        # 默认加密",
        "detail": "src.core.encryption",
        "documentation": {}
    },
    {
        "label": "GlobalErrorHandler",
        "kind": 6,
        "importPath": "src.core.global_error_handler",
        "description": "src.core.global_error_handler",
        "peekOfCode": "class GlobalErrorHandler:\n    @staticmethod\n    def handle_exception(exc_type, exc_value, exc_traceback):\n        \"\"\"处理未捕获的异常\"\"\"\n        # 获取错误信息\n        error_info = ''.join(\n            traceback.format_exception(exc_type, exc_value, exc_traceback))\n        # 如果是在Qt应用程序中\n        app = QApplication.instance()\n        if app is not None:",
        "detail": "src.core.global_error_handler",
        "documentation": {}
    },
    {
        "label": "Location",
        "kind": 6,
        "importPath": "src.core.location",
        "description": "src.core.location",
        "peekOfCode": "class Location(Enum):\n    SHUHE_TOWN = 'https://www.dianping.com/shop/iDYbcrjcbQJyvJyu/review_all'\n    BAISHA_TOWN = 'https://www.dianping.com/shop/k6ttY31GVwu40nbW/review_all'",
        "detail": "src.core.location",
        "documentation": {}
    },
    {
        "label": "LocationMapping",
        "kind": 6,
        "importPath": "src.core.location_mapping",
        "description": "src.core.location_mapping",
        "peekOfCode": "class LocationMapping():\n    def __init__(self, name : str, value : str, literal : str = ''):\n        self._name = name\n        self._value = value\n        self._literal = literal\n    @property\n    def name(self):\n        return self._name\n    @name.setter\n    def name(self, value : str):",
        "detail": "src.core.location_mapping",
        "documentation": {}
    },
    {
        "label": "Swan",
        "kind": 6,
        "importPath": "src.core.swan",
        "description": "src.core.swan",
        "peekOfCode": "class Swan():\n    _swan_version = '1.0.1'\n    log_file_path = ''\n    data_directory = ''\n    land_page_location = 'Lijiang'\n    start_time = 0.0\n    settings: QSettings\n    location: Location = None\n    chromium_tabs: list = []\n    platform: Platform = Platform.DAZHONGDIANPING",
        "detail": "src.core.swan",
        "documentation": {}
    },
    {
        "label": "comment_swan_main",
        "kind": 2,
        "importPath": "src.core.swan",
        "description": "src.core.swan",
        "peekOfCode": "def comment_swan_main():\n    swan = Swan('./swan.config.toml').launch()\n    try:\n        swan.task_dzdp()\n    except KeyboardInterrupt:\n        swan.grace_shutdown()\n        sys.exit(0)\nif __name__ == '__main__':\n    comment_swan_main()",
        "detail": "src.core.swan",
        "documentation": {}
    },
    {
        "label": "Platform",
        "kind": 6,
        "importPath": "src.core.swan_platform",
        "description": "src.core.swan_platform",
        "peekOfCode": "class Platform(Enum):\n    DAZHONGDIANPING = 0       # 大众点评\n    XIECHENG        = 1       # 美团\n    RED             = 2       # 小红书\n    QUNAERWANG      = 3       # 去哪儿网",
        "detail": "src.core.swan_platform",
        "documentation": {}
    },
    {
        "label": "AboutDialog",
        "kind": 6,
        "importPath": "src.gui.dialogs.about_dialog",
        "description": "src.gui.dialogs.about_dialog",
        "peekOfCode": "class AboutDialog(QDialog):\n    def __init__(self, parent=None):\n        super().__init__(parent)\n        self.setWindowTitle(\"关于\")\n        self.setFixedWidth(450)\n        layout = QVBoxLayout()\n        content_layout = QHBoxLayout()\n        v_layout = QVBoxLayout()\n        button_layout = QHBoxLayout()\n        image_layout = QVBoxLayout()",
        "detail": "src.gui.dialogs.about_dialog",
        "documentation": {}
    },
    {
        "label": "AccountCheckDialog",
        "kind": 6,
        "importPath": "src.gui.dialogs.account_check_dialog",
        "description": "src.gui.dialogs.account_check_dialog",
        "peekOfCode": "class AccountCheckDialog(QDialog):\n    def __init__(self, parent: QWidget, message = str) -> None:\n        super().__init__(parent)\n        self.setWindowTitle('账号配置出错啦')\n        self.setFixedWidth(400)\n        self.assent_button = QPushButton('明白了')\n        self.assent_button.setFixedWidth(100)\n        self.assent_button.clicked.connect(self._on_assent_button_click)\n        layout = QVBoxLayout()\n        btn_layout = QHBoxLayout()",
        "detail": "src.gui.dialogs.account_check_dialog",
        "documentation": {}
    },
    {
        "label": "AccountSettingsDialog",
        "kind": 6,
        "importPath": "src.gui.dialogs.account_settings_dialog",
        "description": "src.gui.dialogs.account_settings_dialog",
        "peekOfCode": "class AccountSettingsDialog(QDialog):\n    def __init__(self, settings: QSettings, parent=None):\n        super().__init__(parent)\n        self.settings = settings\n        self.setWindowTitle(\"账号设置\")\n        self.setFixedSize(300, 500)\n        # 账号密码项\n        self.encryption = Encryption(\n            self.settings.value('encryption_dir_path', './bin'), self.settings,\n            None)",
        "detail": "src.gui.dialogs.account_settings_dialog",
        "documentation": {}
    },
    {
        "label": "CSVTableModel",
        "kind": 6,
        "importPath": "src.gui.dialogs.csv_table_viewer",
        "description": "src.gui.dialogs.csv_table_viewer",
        "peekOfCode": "class CSVTableModel(QAbstractTableModel):\n    def __init__(self, data):\n        super().__init__()\n        self._data = data\n    def rowCount(self, index):\n        return len(self._data)\n    def columnCount(self, index):\n        return len(self._data.columns)\n    def data(self, index, role=Qt.ItemDataRole.DisplayRole):\n        if role == Qt.ItemDataRole.DisplayRole:",
        "detail": "src.gui.dialogs.csv_table_viewer",
        "documentation": {}
    },
    {
        "label": "CSVViewer",
        "kind": 6,
        "importPath": "src.gui.dialogs.csv_table_viewer",
        "description": "src.gui.dialogs.csv_table_viewer",
        "peekOfCode": "class CSVViewer(QMainWindow):\n    def __init__(self, default_dir=None):\n        super().__init__()\n        self.setWindowIcon(IconLoader.load_icon())\n        self.default_dir = default_dir or os.path.expanduser(\"~\")\n        self.current_file = None\n        self.watcher = QFileSystemWatcher()\n        self.watcher.fileChanged.connect(self.handle_file_changed)\n        self.scroll_positions = {'vertical': 0, 'horizontal': 0}\n        self.setup_ui()",
        "detail": "src.gui.dialogs.csv_table_viewer",
        "documentation": {}
    },
    {
        "label": "ErrorDialog",
        "kind": 6,
        "importPath": "src.gui.dialogs.error_dialog",
        "description": "src.gui.dialogs.error_dialog",
        "peekOfCode": "class ErrorDialog(QDialog):\n    def __init__(self, error_info, parent=None):\n        super().__init__(parent)\n        self.setWindowTitle(\"Oops, Swan崩溃了!\")\n        self.setMinimumWidth(600)\n        self.setMinimumHeight(300)\n        self.setWindowIcon(IconLoader.load_icon())\n        self.setStyleSheet(StyleSheetManager.fluent_like_style())\n        # 创建主布局\n        main_layout = QVBoxLayout()",
        "detail": "src.gui.dialogs.error_dialog",
        "documentation": {}
    },
    {
        "label": "StatusChecker",
        "kind": 6,
        "importPath": "src.gui.dialogs.exit_dialog",
        "description": "src.gui.dialogs.exit_dialog",
        "peekOfCode": "class StatusChecker(QThread):\n    status_changed = Signal(bool)\n    def __init__(self, task_worker : TaskWorker = None):\n        super().__init__()\n        # 这里可以添加需要检查的状态变量\n        self.is_running = True\n        self.task_worker = task_worker\n    def check_status(self) -> bool:\n        # 在这里实现您的状态检测逻辑\n        # 返回True表示任务完成，返回False表示任务未完成",
        "detail": "src.gui.dialogs.exit_dialog",
        "documentation": {}
    },
    {
        "label": "ExitDialog",
        "kind": 6,
        "importPath": "src.gui.dialogs.exit_dialog",
        "description": "src.gui.dialogs.exit_dialog",
        "peekOfCode": "class ExitDialog(QDialog):\n    def __init__(self, task_worker : TaskWorker = None, parent=None):\n        super().__init__(parent)\n        self.setWindowTitle(\"Swan\")\n        self.setWindowIcon(IconLoader.load_icon())\n        self.setFixedSize(300, 100)\n        self.setStyleSheet(\"\"\"\n            QProgressBar {\n                border: 1px solid grey;\n                border-radius: 5px;",
        "detail": "src.gui.dialogs.exit_dialog",
        "documentation": {}
    },
    {
        "label": "LogViewerDialog",
        "kind": 6,
        "importPath": "src.gui.dialogs.log_viewer_dialog",
        "description": "src.gui.dialogs.log_viewer_dialog",
        "peekOfCode": "class LogViewerDialog(QDialog):\n    def __init__(self, settings: QSettings, parent=None):\n        super().__init__(parent)\n        self.setWindowIcon(IconLoader.load_icon())\n        self.setWindowTitle(\"日志查看器\")\n        self.resize(800, 600)\n        self.settings = settings\n        # 应用样式\n        self.setStyleSheet(StyleSheetManager.fluent_like_style())\n        # 创建主布局",
        "detail": "src.gui.dialogs.log_viewer_dialog",
        "documentation": {}
    },
    {
        "label": "ProgramSettingsDialog",
        "kind": 6,
        "importPath": "src.gui.dialogs.program_settings_dialog",
        "description": "src.gui.dialogs.program_settings_dialog",
        "peekOfCode": "class ProgramSettingsDialog(QDialog):\n    def __init__(self, settings: QSettings, parent=None):\n        super().__init__(parent)\n        self.settings = settings\n        # 从QSettings中加载设置或使用默认值\n        self.config_path = QLineEdit(\n            self.settings.value('config_path', './swan.config.toml'))\n        self.log_path = QLineEdit(\n            self.settings.value('log_path', './logs/swan.log'))\n        self.chrome_executable_path = QLineEdit(",
        "detail": "src.gui.dialogs.program_settings_dialog",
        "documentation": {}
    },
    {
        "label": "EventEmitter",
        "kind": 6,
        "importPath": "src.gui.event.event_emitter",
        "description": "src.gui.event.event_emitter",
        "peekOfCode": "class EventEmitter(QObject):\n    progress_updated = Signal(int, int)  # current_page, total_pages\n    def emit_progress(self, current: int, total: int):\n        self.progress_updated.emit(current, total)",
        "detail": "src.gui.event.event_emitter",
        "documentation": {}
    },
    {
        "label": "TaskProgressTracker",
        "kind": 6,
        "importPath": "src.gui.event.task_progress_tracker",
        "description": "src.gui.event.task_progress_tracker",
        "peekOfCode": "class TaskProgressTracker:\n    def __init__(self, emitter: EventEmitter):\n        self.emitter = emitter\n        self._current_page = 0\n        self._total_pages = 0\n    @property\n    def current_page(self) -> int:\n        return self._current_page\n    @current_page.setter\n    def current_page(self, value: int):",
        "detail": "src.gui.event.task_progress_tracker",
        "documentation": {}
    },
    {
        "label": "TaskWorker",
        "kind": 6,
        "importPath": "src.gui.event.task_worker",
        "description": "src.gui.event.task_worker",
        "peekOfCode": "class TaskWorker(QThread):\n    finished = Signal(bool)\n    error = Signal(str)\n    def __init__(self, swan: Swan, location: Location):\n        super().__init__()\n        self.swan = swan\n        # self.location = location\n        self.swan.set_location(location)\n        logger.debug('Current Location (in task_worker): %s' % self.swan.location)\n        self._is_running = True",
        "detail": "src.gui.event.task_worker",
        "documentation": {}
    },
    {
        "label": "qInitResources",
        "kind": 2,
        "importPath": "src.gui.resources.resources_rc",
        "description": "src.gui.resources.resources_rc",
        "peekOfCode": "def qInitResources():\n    QtCore.qRegisterResourceData(0x03, qt_resource_struct, qt_resource_name, qt_resource_data)\ndef qCleanupResources():\n    QtCore.qUnregisterResourceData(0x03, qt_resource_struct, qt_resource_name, qt_resource_data)\nqInitResources()",
        "detail": "src.gui.resources.resources_rc",
        "documentation": {}
    },
    {
        "label": "qCleanupResources",
        "kind": 2,
        "importPath": "src.gui.resources.resources_rc",
        "description": "src.gui.resources.resources_rc",
        "peekOfCode": "def qCleanupResources():\n    QtCore.qUnregisterResourceData(0x03, qt_resource_struct, qt_resource_name, qt_resource_data)\nqInitResources()",
        "detail": "src.gui.resources.resources_rc",
        "documentation": {}
    },
    {
        "label": "qt_resource_data",
        "kind": 5,
        "importPath": "src.gui.resources.resources_rc",
        "description": "src.gui.resources.resources_rc",
        "peekOfCode": "qt_resource_data = b\"\\\n\\x00\\x00\\x12\\x9b\\\n{\\\n\\x0d\\x0a  \\x22sayings\\x22: [\\\n\\x0d\\x0a    \\x22\\xe8\\xaf\\xb4\\xe7\\x9a\\x84\\xe8\\xaf\\x9d\\\n\\xe4\\xb8\\xba\\xe4\\xbb\\x80\\xe4\\xb9\\x88\\xe4\\xb8\\x8d\\xe8\\xae\\xb0\\xe5\\\n\\xbe\\x97\\xef\\xbc\\x8c\\xe4\\xb8\\xba\\xe4\\xbb\\x80\\xe4\\xb9\\x88\\xe4\\xb8\\\n\\x8d\\xe8\\xae\\xb0\\xe5\\xbe\\x97\\x22,\\x0d\\x0a    \\x22\\\n\\xe6\\x98\\xaf\\xe7\\x8e\\xb0\\xe5\\x9c\\xa8\\xe6\\x88\\x91\\xe6\\x89\\x80\\xe6\\\n\\x9c\\x89\\xe6\\x9c\\x9f\\xe5\\xbe\\x85\\xef\\xbc\\x8c\\xe6\\x89\\x80\\xe6\\x9c\\",
        "detail": "src.gui.resources.resources_rc",
        "documentation": {}
    },
    {
        "label": "qt_resource_name",
        "kind": 5,
        "importPath": "src.gui.resources.resources_rc",
        "description": "src.gui.resources.resources_rc",
        "peekOfCode": "qt_resource_name = b\"\\\n\\x00\\x05\\\n\\x00o\\xa6S\\\n\\x00i\\\n\\x00c\\x00o\\x00n\\x00s\\\n\\x00\\x06\\\n\\x07\\x03}\\xc3\\\n\\x00i\\\n\\x00m\\x00a\\x00g\\x00e\\x00s\\\n\\x00\\x07\\",
        "detail": "src.gui.resources.resources_rc",
        "documentation": {}
    },
    {
        "label": "qt_resource_struct",
        "kind": 5,
        "importPath": "src.gui.resources.resources_rc",
        "description": "src.gui.resources.resources_rc",
        "peekOfCode": "qt_resource_struct = b\"\\\n\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x08\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00\\x10\\x00\\x02\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x05\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00\\x22\\x00\\x02\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x04\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x006\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\",
        "detail": "src.gui.resources.resources_rc",
        "documentation": {}
    },
    {
        "label": "StarterButton",
        "kind": 6,
        "importPath": "src.gui.widgets.starter_button",
        "description": "src.gui.widgets.starter_button",
        "peekOfCode": "class StarterButton(QPushButton):\n    def __init__(self, pixmap, parent=None):\n        super().__init__(parent)\n        # 使用 QPixmap 加载图片\n        self.pixmap = pixmap\n        # 将 QPixmap 转换为 QIcon\n        icon = QIcon(pixmap)\n        # 设置按钮的图标\n        self.setIcon(icon)\n        # 设置图标大小",
        "detail": "src.gui.widgets.starter_button",
        "documentation": {}
    },
    {
        "label": "MainWindow",
        "kind": 6,
        "importPath": "src.gui.main_window",
        "description": "src.gui.main_window",
        "peekOfCode": "class MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        profile = \"Ming\" if getenv(\"APP_PROFILE\") == \"ming\" else \"\"\n        if profile != '':\n            self.setWindowTitle(f\"Swan - {profile}\")\n        else:\n            self.setWindowTitle('Swan')\n        self.resize(800, 600)\n        # 设置应用Icon",
        "detail": "src.gui.main_window",
        "documentation": {}
    },
    {
        "label": "Config",
        "kind": 6,
        "importPath": "src.utils.config",
        "description": "src.utils.config",
        "peekOfCode": "class Config:\n    __config_obj = None\n    __config_file_path = ''\n    def __init__(self, config_file_path) -> None:\n        if not os.path.exists(config_file_path):\n            raise FileNotFoundError('Cannot find the config file at %s' %\n                                    config_file_path)\n        config = toml.load(config_file_path)\n        self.__config_file_path = config_file_path\n        self.__config_obj = config",
        "detail": "src.utils.config",
        "documentation": {}
    },
    {
        "label": "IconLoader",
        "kind": 6,
        "importPath": "src.utils.icon_loader",
        "description": "src.utils.icon_loader",
        "peekOfCode": "class IconLoader():\n    def __init__(self) -> None:\n        pass\n    @staticmethod\n    def load_icon():\n        global SWAN_ICON\n        if SWAN_ICON == None:\n            pixmap = QPixmap(\":/images/swan_icon.png\")\n            SWAN_ICON = QIcon(pixmap)\n        return SWAN_ICON",
        "detail": "src.utils.icon_loader",
        "documentation": {}
    },
    {
        "label": "SWAN_ICON",
        "kind": 5,
        "importPath": "src.utils.icon_loader",
        "description": "src.utils.icon_loader",
        "peekOfCode": "SWAN_ICON = None\nclass IconLoader():\n    def __init__(self) -> None:\n        pass\n    @staticmethod\n    def load_icon():\n        global SWAN_ICON\n        if SWAN_ICON == None:\n            pixmap = QPixmap(\":/images/swan_icon.png\")\n            SWAN_ICON = QIcon(pixmap)",
        "detail": "src.utils.icon_loader",
        "documentation": {}
    },
    {
        "label": "RandomUniqueSelector",
        "kind": 6,
        "importPath": "src.utils.random_selector",
        "description": "src.utils.random_selector",
        "peekOfCode": "class RandomUniqueSelector:\n    def __init__(self, items):\n        self.items = items[:]  # 原始列表的副本\n        self.reset()\n    def reset(self):\n        self.current_items = self.items[:]\n        random.shuffle(self.current_items)  # 打乱顺序以确保随机性\n        self.index = 0\n    def get_next(self):\n        if self.index >= len(self.current_items):",
        "detail": "src.utils.random_selector",
        "documentation": {}
    },
    {
        "label": "StyleSheetManager",
        "kind": 6,
        "importPath": "src.utils.stylesheet_manager",
        "description": "src.utils.stylesheet_manager",
        "peekOfCode": "class StyleSheetManager():\n    def __init__(self) -> None:\n        pass\n    @staticmethod\n    def fluent_like_style():\n        return \"\"\"\n        /* 全局样式 */\n        * {\n            font-family: \"Segoe UI\", \"Microsoft YaHei\";\n            color: #2b2b2b;",
        "detail": "src.utils.stylesheet_manager",
        "documentation": {}
    },
    {
        "label": "load_json",
        "kind": 2,
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "peekOfCode": "def load_json(qt_resource_path: str) -> dict:\n    json_file = QFile(qt_resource_path)\n    if not json_file.open(QFile.OpenModeFlag.ReadOnly\n                          | QFile.OpenModeFlag.Text):\n        logger.error(f\"Cannot open file {qt_resource_path} for reading.\")\n        return {}\n    stream = QTextStream(json_file)\n    json_data = stream.readAll()\n    json_file.close()\n    try:",
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "extract_update_date",
        "kind": 2,
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "peekOfCode": "def extract_update_date(text):\n    # 使用正则表达式匹配“更新于”后面的日期\n    # \\s* 表示任意数量的空白字符（包括空格、制表符、换行符等）\n    # \\d{4}-\\d{2}-\\d{2} 表示 YYYY-MM-DD 格式的日期\n    # \\s*\\d{2}:\\d{2} 表示 HH:MM 格式的时分\n    match = re.search(r'更新于\\s*(\\d{4}-\\d{2}-\\d{2}\\s*\\d{2}:\\d{2})', text)\n    if match:\n        # 提取匹配的日期和时间\n        update_date = match.group(1).strip()\n        return update_date",
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "sanitize_text",
        "kind": 2,
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "peekOfCode": "def sanitize_text(text: str, remove_all: bool = True) -> str:\n    if remove_all:\n        return re.sub(r'\\s+', '', text.strip())\n    else:\n        return text.strip()\ndef sanitize_text_for_red(text: str) -> str:\n    # 去除所有 #符号及其后面的文字，直到空白符或字符串结尾\n    text = re.sub(r'#\\S*', '', text)\n    # 替换多个连续的句号为一个句号\n    text = re.sub(r'。+', '。', text)",
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "sanitize_text_for_red",
        "kind": 2,
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "peekOfCode": "def sanitize_text_for_red(text: str) -> str:\n    # 去除所有 #符号及其后面的文字，直到空白符或字符串结尾\n    text = re.sub(r'#\\S*', '', text)\n    # 替换多个连续的句号为一个句号\n    text = re.sub(r'。+', '。', text)\n    # 删除所有空白符（包括 \\t、\\n 和空格）\n    text = re.sub(r'\\s+', '', text)\n    return text.strip()\ndef extract_and_convert_score(text: str):\n    # 定义映射关系",
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "extract_and_convert_score",
        "kind": 2,
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "peekOfCode": "def extract_and_convert_score(text: str):\n    # 定义映射关系\n    score_mapping = {\n        'sml-str5': 0.5,\n        'sml-str10': 1.0,\n        'sml-str15': 1.5,\n        'sml-str20': 2.0,\n        'sml-str25': 2.5,\n        'sml-str30': 3.0,\n        'sml-str35': 3.5,",
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "star_string_to_int",
        "kind": 2,
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "peekOfCode": "def star_string_to_int(text: str):\n    # 定义一个字典，用于映射不同的星星字符串到其对应的整数值\n    star_mapping = {\n        'star_5': 5,\n        'star_4': 4,\n        'star_3': 3,\n        'star_2': 2,\n        'star_1': 1,\n        'star_0': 0\n    }",
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "concatenate_with_conditions",
        "kind": 2,
        "importPath": "src.utils.text",
        "description": "src.utils.text",
        "peekOfCode": "def concatenate_with_conditions(str_list):\n    if not str_list:  # 如果列表为空，则返回空字符串\n        return ''\n    result = []\n    for i, s in enumerate(str_list):\n        result.append(s)\n        if i < len(str_list) - 1:  # 检查是否是最后一个元素\n            # 检查当前字符串的最后一个字符是否不是指定的标点符号，并且不是最后一个元素\n            if not s.endswith(('。', '，', '！', '!', '~', ',', '.', '……')):\n                result.append('。')  # 添加分隔符",
        "detail": "src.utils.text",
        "documentation": {}
    },
    {
        "label": "config",
        "kind": 5,
        "importPath": "tests.test",
        "description": "tests.test",
        "peekOfCode": "config = Config('./swan.config.toml')\nc = config.load()\n# print(c['account']['test']['username'])\n# c['account']['test']['username'] = 'jjj'\n# print(c['account']['test']['username'])\n# config.save()\nprint(c['account']['dzdp']['page_maximum'])\nprint(Path.joinpath(Path(c['application']['data_directory']), 'dazhongdianping.xlsx'))\nsd = 'sdsdsds'\ns = [sd]",
        "detail": "tests.test",
        "documentation": {}
    },
    {
        "label": "c",
        "kind": 5,
        "importPath": "tests.test",
        "description": "tests.test",
        "peekOfCode": "c = config.load()\n# print(c['account']['test']['username'])\n# c['account']['test']['username'] = 'jjj'\n# print(c['account']['test']['username'])\n# config.save()\nprint(c['account']['dzdp']['page_maximum'])\nprint(Path.joinpath(Path(c['application']['data_directory']), 'dazhongdianping.xlsx'))\nsd = 'sdsdsds'\ns = [sd]\nprint(s)",
        "detail": "tests.test",
        "documentation": {}
    },
    {
        "label": "sd",
        "kind": 5,
        "importPath": "tests.test",
        "description": "tests.test",
        "peekOfCode": "sd = 'sdsdsds'\ns = [sd]\nprint(s)\nprint(sd)\n# chrome_executable_path = Path(config['application']['chrome_executable_path'])\n# print(os.path.exists(chrome_executable_path))",
        "detail": "tests.test",
        "documentation": {}
    },
    {
        "label": "s",
        "kind": 5,
        "importPath": "tests.test",
        "description": "tests.test",
        "peekOfCode": "s = [sd]\nprint(s)\nprint(sd)\n# chrome_executable_path = Path(config['application']['chrome_executable_path'])\n# print(os.path.exists(chrome_executable_path))",
        "detail": "tests.test",
        "documentation": {}
    },
    {
        "label": "extract_update_date",
        "kind": 2,
        "importPath": "tests.test_date",
        "description": "tests.test_date",
        "peekOfCode": "def extract_update_date(text):\n    # 使用正则表达式匹配“更新于”后面的日期\n    # \\s* 表示任意数量的空白字符（包括空格、制表符、换行符等）\n    # \\d{4}-\\d{2}-\\d{2} 表示 YYYY-MM-DD 格式的日期\n    # \\s*\\d{2}:\\d{2} 表示 HH:MM 格式的时分\n    match = re.search(r'更新于\\s*(\\d{4}-\\d{2}-\\d{2}\\s*\\d{2}:\\d{2})', text)\n    if match:\n        # 提取匹配的日期和时间\n        update_date = match.group(1).strip()\n        return update_date",
        "detail": "tests.test_date",
        "documentation": {}
    },
    {
        "label": "text",
        "kind": 5,
        "importPath": "tests.test_date",
        "description": "tests.test_date",
        "peekOfCode": "text = \"\"\"\n                                2024-10-10\n  更新于2024-10-12 09:12                            \n\"\"\"\n# 提取更新日期\n# update_date = extract_update_date(text)\n# if update_date:\n#     print(f\"提取的更新日期: {update_date}\")\n# else:\n#     print(\"未找到更新日期\")",
        "detail": "tests.test_date",
        "documentation": {}
    },
    {
        "label": "show_about",
        "kind": 2,
        "importPath": "tests.test_gui",
        "description": "tests.test_gui",
        "peekOfCode": "def show_about():\n    message = f\"\"\"\n    Swan (天鹅)\n    为了完成这该死的论文开发的程序，能够方便的爬取网络文本。\n    作者: Elias\n    版本号: 1.0.0\n    操作系统: %s\n    Python版本: %s (%s)\n    编译日期: 2024.11.16\n    \"\"\" % (platform.platform(), platform.python_version(), platform.python_compiler())",
        "detail": "tests.test_gui",
        "documentation": {}
    },
    {
        "label": "window",
        "kind": 5,
        "importPath": "tests.test_gui",
        "description": "tests.test_gui",
        "peekOfCode": "window = tk.Tk()\nwindow.title('Swan - Default Mode')\nwindow.geometry('800x500')\nmenu_bar = tk.Menu(window)\nwindow.config(menu=menu_bar)\n# file menu\n# file_menu = tk.Menu(menu_bar, tearoff=0)\n# menu_bar.add_cascade(label='文件', menu=file_menu)\n# file_menu.add_command(label='打开 (Open)')\n# file_menu.add_separator()",
        "detail": "tests.test_gui",
        "documentation": {}
    },
    {
        "label": "menu_bar",
        "kind": 5,
        "importPath": "tests.test_gui",
        "description": "tests.test_gui",
        "peekOfCode": "menu_bar = tk.Menu(window)\nwindow.config(menu=menu_bar)\n# file menu\n# file_menu = tk.Menu(menu_bar, tearoff=0)\n# menu_bar.add_cascade(label='文件', menu=file_menu)\n# file_menu.add_command(label='打开 (Open)')\n# file_menu.add_separator()\n# file_menu.add_command(label='关闭 (Close)')\n# setting menu\nsetting_menu = tk.Menu(menu_bar, tearoff=0)",
        "detail": "tests.test_gui",
        "documentation": {}
    },
    {
        "label": "setting_menu",
        "kind": 5,
        "importPath": "tests.test_gui",
        "description": "tests.test_gui",
        "peekOfCode": "setting_menu = tk.Menu(menu_bar, tearoff=0)\nmenu_bar.add_cascade(label='设置', menu=setting_menu)\nsetting_menu.add_command(label='程序设置 (Ctrl + E)')\nsetting_menu.add_command(label='账号设置 (Ctrl + R)')\ndef show_about():\n    message = f\"\"\"\n    Swan (天鹅)\n    为了完成这该死的论文开发的程序，能够方便的爬取网络文本。\n    作者: Elias\n    版本号: 1.0.0",
        "detail": "tests.test_gui",
        "documentation": {}
    },
    {
        "label": "task_qnw",
        "kind": 2,
        "importPath": "tests.test_qnw",
        "description": "tests.test_qnw",
        "peekOfCode": "def task_qnw() -> Recorder:\n    page_maximum = 100\n    headers = {\n        \"User-Agent\":\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\",\n    }\n    try:\n        for i in range(1, page_maximum):\n            response = requests.get(\n                'https://travel.qunar.com/place/api/html/comments/poi/715281?poiList=true&sortField=0&rank=0&pageSize=10&page=%d'",
        "detail": "tests.test_qnw",
        "documentation": {}
    },
    {
        "label": "extract_and_convert_score",
        "kind": 2,
        "importPath": "tests.test_score",
        "description": "tests.test_score",
        "peekOfCode": "def extract_and_convert_score(text):\n    # 定义映射关系\n    score_mapping = {\n        'sml-str5': 0.5,\n        'sml-str10': 1.0,\n        'sml-str15': 1.5,\n        'sml-str20': 2.0,\n        'sml-str25': 2.5,\n        'sml-str30': 3.0,\n        'sml-str35': 3.5,",
        "detail": "tests.test_score",
        "documentation": {}
    },
    {
        "label": "s",
        "kind": 5,
        "importPath": "tests.test_score",
        "description": "tests.test_score",
        "peekOfCode": "s = extract_and_convert_score(\"sml-rank-stars sml-str45 star\")\nprint(s)",
        "detail": "tests.test_score",
        "documentation": {}
    },
    {
        "label": "get_installed_packages",
        "kind": 2,
        "importPath": "build",
        "description": "build",
        "peekOfCode": "def get_installed_packages():\n    \"\"\"获取已安装的包及其版本\"\"\"\n    return [(dist.key, dist.version) for dist in pkg_resources.working_set]\ndef analyze_environment():\n    \"\"\"分析构建环境\"\"\"\n    print(\"=== Environment Analysis ===\")\n    print(f\"Python Version: {sys.version}\")\n    print(f\"Python Path: {sys.executable}\")\n    print(f\"Virtual Env: {os.environ.get('VIRTUAL_ENV', 'Not in a virtual environment')}\")\n    print(\"\\nInstalled Packages:\")",
        "detail": "build",
        "documentation": {}
    },
    {
        "label": "analyze_environment",
        "kind": 2,
        "importPath": "build",
        "description": "build",
        "peekOfCode": "def analyze_environment():\n    \"\"\"分析构建环境\"\"\"\n    print(\"=== Environment Analysis ===\")\n    print(f\"Python Version: {sys.version}\")\n    print(f\"Python Path: {sys.executable}\")\n    print(f\"Virtual Env: {os.environ.get('VIRTUAL_ENV', 'Not in a virtual environment')}\")\n    print(\"\\nInstalled Packages:\")\n    for package, version in get_installed_packages():\n        print(f\"  - {package} ({version})\")\n    print(\"=\"*30)",
        "detail": "build",
        "documentation": {}
    },
    {
        "label": "build",
        "kind": 2,
        "importPath": "build",
        "description": "build",
        "peekOfCode": "def build():\n    analyze_environment()\n    venv_path = os.environ.get('VIRTUAL_ENV')\n    if not venv_path:\n        print(\"Warning: Not running in a virtual environment!\")\n        user_input = input(\"Continue anyway? (y/n): \")\n        if user_input.lower() != 'y':\n            return 1\n    python_path = str(Path(venv_path) / \"Scripts\" / \"python.exe\") if venv_path else sys.executable\n    site_packages = str(Path(venv_path) / \"Lib\" / \"site-packages\") if venv_path else \"\"",
        "detail": "build",
        "documentation": {}
    },
    {
        "label": "configs",
        "kind": 5,
        "importPath": "buildConfig",
        "description": "buildConfig",
        "peekOfCode": "configs = {\n    \"ming\": {\n        \"title\": \"Swan - Ming\",\n        \"debug\": False\n    },\n    \"test\": {\n        \"title\": \"Swan - Test\",\n        \"debug\": True\n    },\n    \"prod\": {",
        "detail": "buildConfig",
        "documentation": {}
    },
    {
        "label": "task_dzdp_login",
        "kind": 2,
        "importPath": "dzdp",
        "description": "dzdp",
        "peekOfCode": "def task_dzdp_login(self, tab):\n    logger.debug('Re-login has been triggered. (dzdp)')\n    tab.cookies().clear()  # clear all the cookies\n    tab.clear_cache()  # clear all the cache\n    # switch to dynamic mode\n    tab.change_mode('d')\n    username = '17608840498'\n    password = ''\n    if username == '' or password == '':\n        logger.error('Username or password don\\'t configure properly.')",
        "detail": "dzdp",
        "documentation": {}
    },
    {
        "label": "task_dzdp",
        "kind": 2,
        "importPath": "dzdp",
        "description": "dzdp",
        "peekOfCode": "def task_dzdp() -> Recorder:\n    # store the data as CSV file\n    data_file_path = Path('/data/dazhongdianping.csv')\n    recorder = Recorder(path=data_file_path, cache_size=75)\n    try:\n        # launch a new tab\n        tab = Chromium().latest_tab\n        # push the tab into list\n        # self.chromium_tabs.append(tab)\n        # visit dazhongdianping land-page, and show error message",
        "detail": "dzdp",
        "documentation": {}
    },
    {
        "label": "convert_star_ratings",
        "kind": 2,
        "importPath": "mafengwo",
        "description": "mafengwo",
        "peekOfCode": "def convert_star_ratings(text):\n    # 定义映射关系，包括有无连字符的情况\n    star_map = {\n        's-star-5': '5',\n        's-star5': '5',\n        's-star-4': '4',\n        's-star4': '4',\n        's-star-3': '3',\n        's-star3': '3',\n        's-star-2': '2',",
        "detail": "mafengwo",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "mafengwo",
        "description": "mafengwo",
        "peekOfCode": "def main():\n    data_file_path = Path('./data/mafengwo.csv')\n    recorder = Recorder(path=data_file_path, cache_size=75)\n    tab = Chromium().latest_tab\n    # logger.info('Data Path: %s' % data_file_path.as_posix())\n    # tab.get(\"https://passport.mafengwo.cn/\")\n    # logger.info('Please log in target websites, and input [Y] to continue or [N] to abort.')\n    # instruct = input()\n    # if instruct.lower() == 'n':\n    #     logger.warning('Application abort.')",
        "detail": "mafengwo",
        "documentation": {}
    },
    {
        "label": "exception_hook",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def exception_hook(exc_type, exc_value, exc_traceback):\n    \"\"\"Qt异常钩子\"\"\"\n    # 不处理键盘中断异常\n    if issubclass(exc_type, KeyboardInterrupt):\n        sys.__excepthook__(exc_type, exc_value, exc_traceback)\n        return\n    GlobalErrorHandler.handle_exception(exc_type, exc_value, exc_traceback)\ndef main():\n    # 设置全局异常处理\n    sys.excepthook = exception_hook",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def main():\n    # 设置全局异常处理\n    sys.excepthook = exception_hook\n    # Windows 10/11 风格设置\n    QApplication.setStyle(\"Macintosh\")\n    app = QApplication(sys.argv)\n    # 设置Qt的异常处理\n    window = MainWindow()\n    window.setStyleSheet(StyleSheetManager.fluent_like_style())\n    window.show()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "DynamicProgressBar",
        "kind": 6,
        "importPath": "red",
        "description": "red",
        "peekOfCode": "class DynamicProgressBar:\n    def __init__(self, total=100):\n        # 初始化一个 tqdm 进度条\n        self.progress_bar = tqdm(total=total, desc=\"Processing\", position=0, leave=True)\n        self.current = 0  # 当前进度\n        self.total = total  # 最大值\n    def reload(self, new_total):\n        \"\"\"动态调整进度条的最大值\"\"\"\n        self.total = new_total\n        self.progress_bar.total = new_total  # 更新 tqdm 的 total 属性",
        "detail": "red",
        "documentation": {}
    },
    {
        "label": "parse_relative_date",
        "kind": 2,
        "importPath": "red",
        "description": "red",
        "peekOfCode": "def parse_relative_date(date_str: str):\n    current_date = datetime.now().date()\n    if '今天' in date_str:\n        return current_date.strftime(\"%Y-%m-%d\")\n    elif '昨天' in date_str:\n        yesterday = current_date - timedelta(days=1)\n        return yesterday.strftime(\"%Y-%m-%d\")\n    elif '前天' in date_str:\n        day_before_yesterday = current_date - timedelta(days=2)\n        return day_before_yesterday.strftime(\"%Y-%m-%d\")",
        "detail": "red",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "red",
        "description": "red",
        "peekOfCode": "def main():\n    data_file_path = Path('./data/red.csv')\n    recorder = Recorder(path=data_file_path, cache_size=75)\n    tab = Chromium().latest_tab\n    logger.info('Data Path: %s' % data_file_path.as_posix())\n    tab.get(\n        'https://www.xiaohongshu.com/search_result/?keyword=%25E6%259D%259F%25E6%25B2%25B3%25E5%258F%25A4%25E9%2595%2587&type=54&source=web_note_detail_r10'\n    )\n    logger.info(\n        'Please log in target websites, and input [Y] to continue or [N] to abort.'",
        "detail": "red",
        "documentation": {}
    }
]